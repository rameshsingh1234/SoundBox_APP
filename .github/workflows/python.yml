name: Test_app.py

on:
  push:
    branches:
      - master

jobs:
  test-and-scan:
    runs-on: ubuntu-latest

    services:
      zap:
        image: owasp/zap2docker-stable:2.12.0
        options: --entrypoint=""
        ports:
          - 8080:8080

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start ZAP daemon
        run: |
          docker run -d -u zap \
            --name zap \
            -p 8080:8080 \
            -i owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.disablekey=true
          sleep 15

      - name: Open URL and spider
        run: |
          docker exec zap zap-cli --zap-url http://localhost --zap-port 8080 open-url "https://u4qoxwpvtk.execute-api.us-east-1.amazonaws.com/payments/23432/summary/get"
          docker exec zap zap-cli --zap-url http://localhost --zap-port 8080 spider "https://u4qoxwpvtk.execute-api.us-east-1.amazonaws.com/payments/23432/summary/get"

      - name: Run active scan
        run: |
          docker exec zap zap-cli --zap-url http://localhost --zap-port 8080 active-scan "https://u4qoxwpvtk.execute-api.us-east-1.amazonaws.com/payments/23432/summary/get"
          docker exec zap zap-cli --zap-url http://localhost --zap-port 8080 alerts

      - name: Generate ZAP report
        run: |
          docker exec zap zap-cli --zap-url http://localhost --zap-port 8080 report -o /zap/wrk/zap_report.html -f html
          docker cp zap:/zap/wrk/zap_report.html zap_report.html

      - name: Upload ZAP report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html

      - name: Run API tests
        env:
          ZAP_URL: http://localhost:8080
        run: |
          pytest --maxfail=1 --disable-warnings -v


#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3
#    - name: Setup Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9  # Replace 'x' with your desired Python version
#
#    - name: Install dependencies
#      run: |
#        pip install -r requirements.txt
#
#    - name: test directory
#      run : pwd
#
#    - name : test
#      run : ls
#
#    - name : test1
#      run : cd /home/runner/work/SoundBox_APP/
#
#
##test
#
#    - name: Run Pytest
#
#
#      run: pytest -v -s --capture=tee-sys ./TestScript/Test_app.py --html=./reports/report.html
#
#
#
##test
#
#    - name: Send Email Report
#      uses: actions/upload-artifact@v2
#      with:
#        name: Test Report
#        path: reports/report.html
#
#
#
#    - name: Configure Gmail and Send Email
#      env:
#        GMAIL_USERNAME: ${{secrets.GMAIL_USERNAME}}
#        GMAIL_PASSWORD: ${{secrets.GMAIL_PASSWORD}}
#
#        RECIPIENT_EMAIL: ${{secrets.RECIPIENT_EMAIL}}  # Replace with the recipient's email
#
#      run: |
#        python Utilities/send_email_script.py $GMAIL_USERNAME $GMAIL_PASSWORD $RECIPIENT_EMAIL

