name: Test and Scan
#test11
on:
  push:
    branches:
      - master

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: 'https://u4qoxwpvtk.execute-api.us-east-1.amazonaws.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'




      - name: Generate ZAP Report
        run: |
          docker run --rm \
            -v $(pwd):/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-cli report \
            -o /zap/wrk/zap_report.html \
            -f html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html

      - name: Create Issue if Failures Found
        if: ${{ steps.zap_scan.outputs.alerts_present == 'true' }}
        run: |
          # Your script or command to create an issue
          echo "ZAP scan detected issues. Creating issue..."
          # Example: Create issue using GitHub CLI
          # gh issue create --title "ZAP Scan Findings" --body "ZAP scan detected vulnerabilities."

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html


      - name: Send Email Report
        uses: actions/upload-artifact@v2
        with:
          name: Test Report
          path: /zap/wrk/zap_report.html



      - name: Configure Gmail and Send Email
        env:
          GMAIL_USERNAME: ${{secrets.GMAIL_USERNAME}}
          GMAIL_PASSWORD: ${{secrets.GMAIL_PASSWORD}}

          RECIPIENT_EMAIL: ${{secrets.RECIPIENT_EMAIL}}  # Replace with the recipient's email

        run: |
          python Utilities/send_email_script.py $GMAIL_USERNAME $GMAIL_PASSWORD $RECIPIENT_EMAIL




#name: Test and Scan
#
#on:
#  push:
#    branches:
#      - master
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3
#    - name: Setup Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9  # Replace 'x' with your desired Python version
#
#    - name: Install dependencies
#      run: |
#        pip install -r requirements.txt
#
#    - name: test directory
#      run : pwd
#
#    - name : test
#      run : ls
#
#    - name : test1
#      run : cd /home/runner/work/SoundBox_APP/
#
#
##test
#
#    - name: Run Pytest
#
#
#      run: pytest -v -s --capture=tee-sys ./TestScript/Test_app.py --html=./reports/report.html
#
#
#
##test

#    - name: Send Email Report
#      uses: actions/upload-artifact@v2
#      with:
#        name: Test Report
#        path: reports/report.html
#
#
#
#    - name: Configure Gmail and Send Email
#      env:
#        GMAIL_USERNAME: ${{secrets.GMAIL_USERNAME}}
#        GMAIL_PASSWORD: ${{secrets.GMAIL_PASSWORD}}
#
#        RECIPIENT_EMAIL: ${{secrets.RECIPIENT_EMAIL}}  # Replace with the recipient's email
#
#      run: |
#        python Utilities/send_email_script.py $GMAIL_USERNAME $GMAIL_PASSWORD $RECIPIENT_EMAIL

